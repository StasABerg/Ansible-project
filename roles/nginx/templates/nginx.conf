user nginx;

# One worker process per CPU core.
worker_processes 4;
worker_rlimit_nofile 65535;


events {
    #
    # Determines how many clients will be served by each worker process.
    # (Max clients = worker_connections * worker_processes)
    # Should be equal to `ulimit -n`
    #
    worker_connections 1024;

    #
    # Let each process accept multiple connections.
    # Accept as many connections as possible, after nginx gets notification
    # about a new connection.
    # May flood worker_connections, if that option is set too low.
    #
    multi_accept on;

    #
    # Preferred connection method for newer linux versions.
    # Essential for linux, optmized to serve many clients with each thread.
    #
    use epoll;
}

http {


    #
    # Override some buffer limitations, will prevent DDOS too.
    #
    client_body_buffer_size 10K;
    client_header_buffer_size 4k;
    client_max_body_size 32M;
    large_client_header_buffers 8 64k;
    
    #
    # Timeouts
    # The client_body_timeout and client_header_timeout directives are
    # responsible for the time a server will wait for a client body or
    # client header to be sent after request. If neither a body or header
    # is sent, the server will issue a 408 error or Request time out.
    #
    # The keepalive_timeout assigns the timeout for keep-alive connections
    # with the client. Simply put, Nginx will close connections with the
    # client after this period of time.
    #
    # Finally, the send_timeout is a timeout for transmitting a response
    # to the client. If the client does not receive anything within this
    # time, then the connection will be closed.
    #

    
    client_body_timeout   10;  #  Default 60.
    client_header_timeout 32;
    keepalive_timeout 90;      # default 65
    send_timeout 120;          # default 60
    
    #
    # Allow the server to close the connection after a client stops
    # responding.
    # Frees up socket-associated memory.
    #
    reset_timedout_connection on;
    
    #
    # Open file descriptors.
    # Caches information about open FDs, freqently accessed files.
    #
    open_file_cache max=20000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    #
    # SSL cache
    #
    
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 180m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
    #ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';
    
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #resolver 8.8.4.4 8.8.8.8;
    
    #
    # HTTP cache
    #

  
    # proxy_cache_path /var/cache/nginx levels=1:2:2 keys_zone=bt10:32m max_size=10g inactive=7d;
    
    #fastcgi_cache_path /var/cache/fpm levels=1:2:2 keys_zone=fcgi_cache:32m max_size=128m inactive=900s;
   

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    
    types_hash_max_size 2048;
    
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

   
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_static on;
    #gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_disable "msie6";
    gzip_vary on;

    # Only allow proxy request with these headers to be gzipped.    
    gzip_proxied expired no-cache no-store private auth;

    # Default is 6 (1<n<9), but 2 -- even 1 -- is enough. The higher it is, the
    # more CPU cycles will be wasted.
    gzip_comp_level 5;
    gzip_min_length 1500; # Default 20

   gzip_types text/plain 
			  text/css 
			  application/json 
			  application/x-javascript 
			  text/xml 
			  application/xml 
              application/xml+rss 
              text/javascript 
              application/javascript
              image/svg+xml;
#image/png;
#    application/octet-stream
#    font/woff2
#    font/woff
#    font/ttf;



     # Additional options
    server_tokens off;
      
    include /etc/nginx/conf.d/*.conf;


}

